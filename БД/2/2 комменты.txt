Select distinct Книги.Кодкниги, Книги.Кодавтора, Абонемент.Датавыдачи, Абонемент.Срок /*В выборке DISTINCT используется для указания на то, 
что следует работать только с уникальными значениями столбца.*/
from Книги inner join Абонемент on Абонемент.Кодкниги=Книги.Кодкниги
/*INNER JOIN формирует таблицу из записей двух таблиц. Каждая строка из первой таблицы, сопоставляется с каждой строкой из второй таблицы,
после чего происходит проверка условия. Если условие истинно, то строки попадают в результирующую таблицу.*/
where SYSDATETIME()>Срок
/* В данном случае, условием является то, что срок сдачи будет меньше чем сегодняшняя дата, указанная в системе */

--Выбрать все книги, выпущенные издательствами, в название которых входит слово «Москва»
select * /* Звездочка позволяет вывести все данные 
из таблицы книги*/
from Книги 
where Издательство like '%Москва%' -- знак % позволяет игнорировать любые символы которые будут находиться до и после слова Москва
/* Условием является Издательство включающее любые упоминания слова Москва */

-- указываем столбцы которые будут включены в нашу выборку
Select Книги.Кодкниги, Книги.Кодавтора, Книги.Название, 
Книги.Годиздания, Книги.Количествостраниц, Книги.Издательство, 
Абонемент.Кодчитателя, Абонемент.Датавыдачи, 
Абонемент.Срок, Абонемент.Отметкаовозврате
-- Вносим данные в созданнную таблицу "Новаятаблица2"
into Новаятаблица2
-- Повторяем условие первого запроса (по заданию)
/*INNER JOIN формирует таблицу из записей двух таблиц. Каждая строка из первой таблицы, сопоставляется с каждой строкой из второй таблицы,
после чего происходит проверка условия. Если условие истинно, то строки попадают в результирующую таблицу.*/
from Книги inner join
Абонемент on Абонемент.Кодкниги=Книги.Кодкниги
where SYSDATETIME()>Срок
/* В данном случае, условием является то, что срок сдачи будет меньше чем сегодняшняя дата, указанная в системе */

insert into Новаятаблица2 -- добавляем строки в уже созданную таблицу
-- указываем столбцы которые будут включены в нашу выборку
select Книги.Кодкниги, Книги.Кодавтора, Книги.Название, 
Книги.Годиздания, Книги.Количествостраниц, Книги.Издательство, 
Абонемент.Кодчитателя, Абонемент.Датавыдачи, 
Абонемент.Срок, Абонемент.Отметкаовозврате
/*INNER JOIN формирует таблицу из записей двух таблиц. Каждая строка из первой таблицы, сопоставляется с каждой строкой из второй таблицы,
после чего происходит проверка условия. Если условие истинно, то строки попадают в результирующую таблицу.*/
from Книги inner join
Абонемент on Абонемент.Кодкниги=Книги.Кодкниги
Where datediff(month,Датавыдачи,Срок)  = 1
-- В данном случае, условием является то, что разница между датой выдачи и сроком будет равна 1 месяцу

-- обновляем строки созданной таблицы
update Новаятаблица2
-- устанавливая новые значения
set Срок = dateadd(yy,2,getdate())
-- с помощью функции dateadd мы добавляем к сроку 2 года
where Годиздания <= 1990 
-- условием будет год издания, который меньше или равен 1990

--Удалить из созданной таблицы записи для всех книг, названия которых начинаются и заканчиваются на одну букву.
delete
-- удаляем строки из созданной таблицы
from Новаятаблица2
-- условием будет, там где первый символ Названия книги соответсвует первому символу названия любой другой книги
where left(Название, 1) = right(Название, 1)

-- Посчитать сколько раз была выдана каждая из книг, хранящихся в библиотеке.
select Кодкниги, count(Кодкниги) 
-- функция count возвращает количество элементов, найденных в столбце код книги
from Абонемент
-- из таблицы Абонемент
group by Кодкниги
-- группируем по столбцу код книги



